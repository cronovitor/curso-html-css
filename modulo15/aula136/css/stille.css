.gridContainer{
  
  width: 300px;
  background: #ccc;

}

.gridItem{
  
  background: #999;  
  font-size: 2em;
  font-family: sans-serif;

}
.gridItem:nth-child(even){
  
  background: #999;
  color: white;

}

.gridItem:nth-child(odd){
  
  background: #eee;

}

/*Grid*/

.gridContainer{

  width: 100%;
  display: grid;/*dessa forma eu formato meu elemento e crio uma grid*/
  
  /* grid-template: 100px 100px 100px; */ /*esse elemento em conjunto com o display: grid eu começo a formatar minha grid como eu coloquei  valores ele ira organizar minhas colunas em 3 */
  grid-template-columns: repeat(3, 1fr) 100px;/*maneira simplificada de fazer o grid-template */
  
  grid-template-rows: 100px 100px;/*com essa formatação eu crio quantas linhas vão ter minha grid vai ter quantidade de valores e a quantidade de linhas */
  /*grid-row-gap: 30px; /*usado pra eu criar um espaço entre minhas linhas horizontais internas da minha grid*/
  /*grid-column-gap: 12px; /*usado pra criar um espaço entre minhas linhas verticais internas da minhas grid */
  grid-gap: 30px 10px; /*com o grid-gap eu resumo as duas propriedades obs: primeiro valor e o row segundo e o collumns*/

}

.gridItem:nth-child(1){

  background-color: red;
  /*grid-row-start: 1;
  grid-row-end: 2;
  grid-column-start: 2;
  grid-column-end: -1;*/

  grid-row: 1/2;
  grid-column: 2/ -1;

}

.gridItem:nth-child(2){

  grid-row: 1/ span 2;

}

.gridItem:nth-child(6){

  grid: 1/ -1;

}

